trigger:
  branches:
    include:
      - main
  paths:
    include:
      - apps/orchestrator/*
      - pipelines/orchestrator-ci-cd.yml

variables:
  buildConfiguration: Release

stages:
  - stage: Build
    displayName: Build and test
    jobs:
      - job: Build
        pool:
          vmImage: 'windows-latest'
        steps:
          - checkout: self
            clean: true
          - task: DotNetCoreCLI@2
            displayName: Restore
            inputs:
              command: 'restore'
              projects: 'apps/orchestrator/src/Practx.Orchestrator/Practx.Orchestrator.csproj'
          - task: DotNetCoreCLI@2
            displayName: Build
            inputs:
              command: 'build'
              projects: 'apps/orchestrator/src/Practx.Orchestrator/Practx.Orchestrator.csproj'
              arguments: '--configuration $(buildConfiguration)'
          - task: DotNetCoreCLI@2
            displayName: Test
            inputs:
              command: 'test'
              projects: 'apps/orchestrator/src/Practx.Orchestrator/Practx.Orchestrator.csproj'
              arguments: '--configuration $(buildConfiguration) --no-build'
          - task: DotNetCoreCLI@2
            displayName: Publish
            inputs:
              command: 'publish'
              publishWebProjects: false
              projects: 'apps/orchestrator/src/Practx.Orchestrator/Practx.Orchestrator.csproj'
              arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/publish'
          - task: ArchiveFiles@2
            displayName: Create deployment package
            inputs:
              rootFolderOrFile: '$(Build.ArtifactStagingDirectory)/publish'
              includeRootFolder: false
              archiveFile: '$(Build.ArtifactStagingDirectory)/orchestrator.zip'
          - publish: $(Build.ArtifactStagingDirectory)/orchestrator.zip
            artifact: orchestrator-drop

  - stage: Deploy
    displayName: Deploy to Azure Functions
    dependsOn: Build
    condition: succeeded()
    variables:
      - group: Practx-KeyVault
    jobs:
      - deployment: DeployFunctionApp
        environment: practx-orchestrator
        pool:
          vmImage: 'ubuntu-latest'
        strategy:
          runOnce:
            deploy:
              steps:
                - task: DownloadBuildArtifacts@0
                  inputs:
                    buildType: current
                    downloadType: single
                    artifactName: orchestrator-drop
                    downloadPath: $(System.ArtifactsDirectory)
                - task: AzureFunctionApp@2
                  displayName: Deploy orchestrator
                  inputs:
                    azureSubscription: $(AZ_SUBSCRIPTION)
                    resourceGroupName: $(AZ_RESOURCE_GROUP)
                    appType: functionAppLinux
                    appName: $(AZ_FUNCTIONAPP_NAME)
                    package: '$(System.ArtifactsDirectory)/orchestrator-drop/orchestrator.zip'
                    deploymentMethod: zipDeploy
