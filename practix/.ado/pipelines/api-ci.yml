trigger:
  branches:
    include:
      - main

pool:
  vmImage: ubuntu-latest

variables:
  apiAppName: $(baseName)-$(env)-api
  projectDir: practix/apps/api

steps:
  - task: UseDotNet@2
    displayName: 'Use .NET 8'
    inputs:
      version: '8.0.x'

  - script: dotnet restore
    workingDirectory: $(projectDir)
    displayName: 'Restore dependencies'

  - script: dotnet build --configuration Release --no-restore
    workingDirectory: $(projectDir)
    displayName: 'Build API'

  - script: dotnet publish --configuration Release --no-build -o $(Build.ArtifactStagingDirectory)/publish
    workingDirectory: $(projectDir)
    displayName: 'Publish API'

  - task: AzureWebApp@1
    displayName: 'Deploy API app'
    inputs:
      azureSubscription: $(azureServiceConnection)
      appType: webAppLinux
      appName: $(apiAppName)
      package: $(Build.ArtifactStagingDirectory)/publish
      runtimeStack: 'DOTNETCORE|8.0'

  - task: AzureCLI@2
    displayName: 'Run SQL migrations'
    inputs:
      azureSubscription: $(azureServiceConnection)
      scriptType: bash
      scriptLocation: inlineScript
      inlineScript: |
        for file in practix/schemas/sql/*.sql; do
          echo "Running $file"
          sqlcmd -S $(sqlServer) -d $(sqlDatabase) -U $(sqlAdminLogin) -P $(sqlAdminPassword) -i $file
        done
