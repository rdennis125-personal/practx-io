name: infra-storage
on:
  workflow_dispatch:
    inputs:
      swa_csv:
        description: "Comma-separated SWA resource names (e.g., practx-swa)"
        required: true
        default: "practx-swa"
  push:
    branches: [ main ]
    paths:
      - 'infra/modules/storage.bicep'
      - '.github/workflows/infra-storage.yml'

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      RG: your-resource-group
      LOCATION: westus2
      SA_PREFIX: sto-practx # base used for all storage account names
    steps:
      - uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Loop SWAs and deploy storage + app settings
        shell: bash
        run: |
          set -euo pipefail

          declare -A STORAGE_NAMES=(
            [dev]="${SA_PREFIX}-dev"
            [qa1]="${SA_PREFIX}-qa1"
            [prod]="${SA_PREFIX}"
          )

          echo "==> Ensuring storage accounts exist"
          for ENV in dev qa1 prod; do
            SA_NAME="${STORAGE_NAMES[$ENV]}"
            echo " -> Deploying storage account ${SA_NAME}"
            az deployment group create \
              --resource-group "$RG" \
              --template-file infra/modules/storage.bicep \
              --parameters location="$LOCATION" storageAccountName="$SA_NAME" \
              --query properties.outputs >/dev/null
          done

          IFS=',' read -ra SWAS <<< "${{ github.event.inputs.swa_csv }}"
          for SWA in "${SWAS[@]}"; do
            SWA_TRIM=$(echo "$SWA" | xargs)

            # Determine environment suffix based on SWA name
            ENVIRONMENT="prod"
            if [[ "$SWA_TRIM" == *"dev"* ]]; then
              ENVIRONMENT="dev"
            elif [[ "$SWA_TRIM" == *"qa1"* ]]; then
              ENVIRONMENT="qa1"
            fi

            SA_NAME="${STORAGE_NAMES[$ENVIRONMENT]}"

            echo "==> Configuring SWA: $SWA_TRIM with storage account: $SA_NAME"

            # Fetch connection string & blob endpoint
            CONN=$(az storage account show-connection-string -g "$RG" -n "$SA_NAME" --query connectionString -o tsv)
            ENDPOINT=$(az storage account show -g "$RG" -n "$SA_NAME" --query "primaryEndpoints.blob" -o tsv)

            # Set SWA app settings (creates/updates)
            az staticwebapp appsettings set -g "$RG" -n "$SWA_TRIM" --setting-names \
              BLOB_CONNECTION="$CONN" \
              BLOB_ENDPOINT="$ENDPOINT" \
              CONTAINER_LANDING="landing" \
              CONTAINER_PRACTICE="practice" \
              CONTAINER_PATIENT="patient" \
              CONTAINER_EQUIPMENT="equipment" \
              CONTAINER_SERVICE="service"

            echo "Configured app settings for $SWA_TRIM ($ENVIRONMENT)"
          done
