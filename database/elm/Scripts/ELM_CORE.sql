IF NOT EXISTS (SELECT 1 FROM sys.schemas WHERE name = 'elm')
BEGIN
    EXEC('CREATE SCHEMA elm');
END
GO

CREATE TABLE elm.PRACTICE (
    PRACTICE_ID UNIQUEIDENTIFIER NOT NULL DEFAULT NEWID() PRIMARY KEY,
    NAME NVARCHAR(200) NOT NULL,
    CREATED_AT DATETIME2(3) NOT NULL DEFAULT SYSUTCDATETIME(),
    UPDATED_AT DATETIME2(3) NOT NULL DEFAULT SYSUTCDATETIME(),
    IS_DELETED BIT NOT NULL DEFAULT 0
);
GO

CREATE TABLE elm.CLINIC (
    CLINIC_ID UNIQUEIDENTIFIER NOT NULL DEFAULT NEWID() PRIMARY KEY,
    PRACTICE_ID UNIQUEIDENTIFIER NOT NULL,
    NAME NVARCHAR(200) NOT NULL,
    ADDRESS_LINE_1 NVARCHAR(200) NULL,
    CITY NVARCHAR(100) NULL,
    REGION NVARCHAR(50) NULL,
    POSTAL_CODE NVARCHAR(20) NULL,
    CREATED_AT DATETIME2(3) NOT NULL DEFAULT SYSUTCDATETIME(),
    UPDATED_AT DATETIME2(3) NOT NULL DEFAULT SYSUTCDATETIME(),
    IS_DELETED BIT NOT NULL DEFAULT 0,
    CONSTRAINT FK_CLINIC_PRACTICE FOREIGN KEY (PRACTICE_ID) REFERENCES elm.PRACTICE (PRACTICE_ID)
);
GO

CREATE TABLE elm.SPACE (
    SPACE_ID UNIQUEIDENTIFIER NOT NULL DEFAULT NEWID() PRIMARY KEY,
    CLINIC_ID UNIQUEIDENTIFIER NOT NULL,
    NAME NVARCHAR(100) NOT NULL,
    KIND NVARCHAR(50) NOT NULL,
    CREATED_AT DATETIME2(3) NOT NULL DEFAULT SYSUTCDATETIME(),
    UPDATED_AT DATETIME2(3) NOT NULL DEFAULT SYSUTCDATETIME(),
    IS_DELETED BIT NOT NULL DEFAULT 0,
    CONSTRAINT FK_SPACE_CLINIC FOREIGN KEY (CLINIC_ID) REFERENCES elm.CLINIC (CLINIC_ID)
);
GO

CREATE TABLE elm.SERVICE_PROVIDER (
    PROVIDER_ID UNIQUEIDENTIFIER NOT NULL DEFAULT NEWID() PRIMARY KEY,
    NAME NVARCHAR(200) NOT NULL,
    REGION NVARCHAR(50) NULL,
    RATING DECIMAL(3, 2) NULL,
    CREATED_AT DATETIME2(3) NOT NULL DEFAULT SYSUTCDATETIME(),
    UPDATED_AT DATETIME2(3) NOT NULL DEFAULT SYSUTCDATETIME(),
    IS_DELETED BIT NOT NULL DEFAULT 0
);
GO

CREATE TABLE elm.CLINIC_SERVICE_PROVIDER (
    CLINIC_ID UNIQUEIDENTIFIER NOT NULL,
    PROVIDER_ID UNIQUEIDENTIFIER NOT NULL,
    STATUS NVARCHAR(30) NOT NULL DEFAULT 'ACTIVE',
    TERMS_JSON NVARCHAR(MAX) NULL,
    CREATED_AT DATETIME2(3) NOT NULL DEFAULT SYSUTCDATETIME(),
    PRIMARY KEY (CLINIC_ID, PROVIDER_ID),
    CONSTRAINT FK_CSP_CLINIC FOREIGN KEY (CLINIC_ID) REFERENCES elm.CLINIC (CLINIC_ID),
    CONSTRAINT FK_CSP_PROVIDER FOREIGN KEY (PROVIDER_ID) REFERENCES elm.SERVICE_PROVIDER (PROVIDER_ID)
);
GO

CREATE TABLE elm.MANUFACTURER (
    MANUFACTURER_ID UNIQUEIDENTIFIER NOT NULL DEFAULT NEWID() PRIMARY KEY,
    NAME NVARCHAR(200) NOT NULL,
    WEBSITE NVARCHAR(300) NULL,
    SUPPORT_URL NVARCHAR(300) NULL,
    COUNTRY NVARCHAR(50) NULL,
    CREATED_AT DATETIME2(3) NOT NULL DEFAULT SYSUTCDATETIME(),
    UPDATED_AT DATETIME2(3) NOT NULL DEFAULT SYSUTCDATETIME()
);
GO

CREATE TABLE elm.DEVICE_TYPE (
    DEVICE_TYPE_ID UNIQUEIDENTIFIER NOT NULL DEFAULT NEWID() PRIMARY KEY,
    CODE NVARCHAR(50) NOT NULL UNIQUE,
    NAME NVARCHAR(100) NOT NULL,
    CATEGORY NVARCHAR(50) NOT NULL,
    CREATED_AT DATETIME2(3) NOT NULL DEFAULT SYSUTCDATETIME(),
    UPDATED_AT DATETIME2(3) NOT NULL DEFAULT SYSUTCDATETIME()
);
GO

CREATE TABLE elm.DEVICE_MODEL (
    DEVICE_MODEL_ID UNIQUEIDENTIFIER NOT NULL DEFAULT NEWID() PRIMARY KEY,
    MANUFACTURER_ID UNIQUEIDENTIFIER NOT NULL,
    DEVICE_TYPE_ID UNIQUEIDENTIFIER NOT NULL,
    MODEL_CODE NVARCHAR(100) NOT NULL,
    MODEL_NAME NVARCHAR(200) NOT NULL,
    LIFECYCLE_STATUS NVARCHAR(30) NOT NULL DEFAULT 'ACTIVE',
    SPECS_JSON NVARCHAR(MAX) NULL,
    CREATED_AT DATETIME2(3) NOT NULL DEFAULT SYSUTCDATETIME(),
    UPDATED_AT DATETIME2(3) NOT NULL DEFAULT SYSUTCDATETIME(),
    CONSTRAINT UQ_DEVICE_MODEL UNIQUE (MANUFACTURER_ID, DEVICE_TYPE_ID, MODEL_CODE),
    CONSTRAINT FK_DEVICE_MODEL_MANUFACTURER FOREIGN KEY (MANUFACTURER_ID) REFERENCES elm.MANUFACTURER (MANUFACTURER_ID),
    CONSTRAINT FK_DEVICE_MODEL_DEVICE_TYPE FOREIGN KEY (DEVICE_TYPE_ID) REFERENCES elm.DEVICE_TYPE (DEVICE_TYPE_ID)
);
GO

CREATE TABLE elm.DEVICE (
    DEVICE_ID UNIQUEIDENTIFIER NOT NULL DEFAULT NEWID() PRIMARY KEY,
    CLINIC_ID UNIQUEIDENTIFIER NOT NULL,
    DEVICE_MODEL_ID UNIQUEIDENTIFIER NOT NULL,
    STATUS NVARCHAR(30) NOT NULL DEFAULT 'ACTIVE',
    INSTALLED_AT DATETIME2(3) NULL,
    RETIRED_AT DATETIME2(3) NULL,
    NOTES NVARCHAR(MAX) NULL,
    CREATED_AT DATETIME2(3) NOT NULL DEFAULT SYSUTCDATETIME(),
    UPDATED_AT DATETIME2(3) NOT NULL DEFAULT SYSUTCDATETIME(),
    IS_DELETED BIT NOT NULL DEFAULT 0,
    CONSTRAINT FK_DEVICE_CLINIC FOREIGN KEY (CLINIC_ID) REFERENCES elm.CLINIC (CLINIC_ID),
    CONSTRAINT FK_DEVICE_DEVICE_MODEL FOREIGN KEY (DEVICE_MODEL_ID) REFERENCES elm.DEVICE_MODEL (DEVICE_MODEL_ID)
);
GO

CREATE TABLE elm.DEVICE_IDENTIFIER (
    DEVICE_ID UNIQUEIDENTIFIER NOT NULL PRIMARY KEY,
    SERIAL_NUMBER NVARCHAR(100) NULL UNIQUE,
    ALT_ID NVARCHAR(100) NULL,
    MANUFACTURER NVARCHAR(200) NULL,
    MODEL NVARCHAR(200) NULL,
    CREATED_AT DATETIME2(3) NOT NULL DEFAULT SYSUTCDATETIME(),
    UPDATED_AT DATETIME2(3) NOT NULL DEFAULT SYSUTCDATETIME(),
    CONSTRAINT FK_DEVICE_IDENTIFIER_DEVICE FOREIGN KEY (DEVICE_ID) REFERENCES elm.DEVICE (DEVICE_ID)
);
GO

CREATE TABLE elm.DEVICE_SPACE (
    DEVICE_SPACE_ID UNIQUEIDENTIFIER NOT NULL DEFAULT NEWID() PRIMARY KEY,
    DEVICE_ID UNIQUEIDENTIFIER NOT NULL,
    SPACE_ID UNIQUEIDENTIFIER NOT NULL,
    START_AT DATETIME2(3) NOT NULL DEFAULT SYSUTCDATETIME(),
    END_AT DATETIME2(3) NULL,
    CONSTRAINT FK_DEVICE_SPACE_DEVICE FOREIGN KEY (DEVICE_ID) REFERENCES elm.DEVICE (DEVICE_ID),
    CONSTRAINT FK_DEVICE_SPACE_SPACE FOREIGN KEY (SPACE_ID) REFERENCES elm.SPACE (SPACE_ID)
);
GO

CREATE TABLE elm.SERVICE_TYPE (
    SERVICE_TYPE_ID UNIQUEIDENTIFIER NOT NULL DEFAULT NEWID() PRIMARY KEY,
    CODE NVARCHAR(50) NOT NULL UNIQUE,
    NAME NVARCHAR(100) NOT NULL,
    DESCRIPTION NVARCHAR(400) NULL,
    CREATED_AT DATETIME2(3) NOT NULL DEFAULT SYSUTCDATETIME(),
    UPDATED_AT DATETIME2(3) NOT NULL DEFAULT SYSUTCDATETIME()
);
GO

CREATE TABLE elm.PROVIDER_CERTIFICATION (
    PROVIDER_CERT_ID UNIQUEIDENTIFIER NOT NULL DEFAULT NEWID() PRIMARY KEY,
    PROVIDER_ID UNIQUEIDENTIFIER NOT NULL,
    MANUFACTURER_ID UNIQUEIDENTIFIER NOT NULL,
    DEVICE_TYPE_ID UNIQUEIDENTIFIER NOT NULL,
    SERVICE_TYPE_ID UNIQUEIDENTIFIER NOT NULL,
    DEVICE_MODEL_ID UNIQUEIDENTIFIER NULL,
    LEVEL_CODE NVARCHAR(50) NOT NULL,
    ISSUED_ON DATE NOT NULL,
    EXPIRES_ON DATE NOT NULL,
    CERTIFICATE_NO NVARCHAR(100) NULL,
    ISSUER_ORG NVARCHAR(200) NULL,
    PROOF_URI NVARCHAR(300) NULL,
    PROOF_HASH NVARCHAR(128) NULL,
    NOTES NVARCHAR(MAX) NULL,
    CREATED_AT DATETIME2(3) NOT NULL DEFAULT SYSUTCDATETIME(),
    UPDATED_AT DATETIME2(3) NOT NULL DEFAULT SYSUTCDATETIME(),
    CONSTRAINT FK_PC_PROVIDER FOREIGN KEY (PROVIDER_ID) REFERENCES elm.SERVICE_PROVIDER (PROVIDER_ID),
    CONSTRAINT FK_PC_MANUFACTURER FOREIGN KEY (MANUFACTURER_ID) REFERENCES elm.MANUFACTURER (MANUFACTURER_ID),
    CONSTRAINT FK_PC_DEVICE_TYPE FOREIGN KEY (DEVICE_TYPE_ID) REFERENCES elm.DEVICE_TYPE (DEVICE_TYPE_ID),
    CONSTRAINT FK_PC_SERVICE_TYPE FOREIGN KEY (SERVICE_TYPE_ID) REFERENCES elm.SERVICE_TYPE (SERVICE_TYPE_ID),
    CONSTRAINT FK_PC_DEVICE_MODEL FOREIGN KEY (DEVICE_MODEL_ID) REFERENCES elm.DEVICE_MODEL (DEVICE_MODEL_ID)
);
GO

CREATE UNIQUE INDEX IXU_PC_SCOPE
    ON elm.PROVIDER_CERTIFICATION (PROVIDER_ID, MANUFACTURER_ID, DEVICE_TYPE_ID, SERVICE_TYPE_ID, DEVICE_MODEL_ID, LEVEL_CODE);
GO

CREATE TABLE elm.WARRANTY_DEFINITION (
    WARRANTY_DEF_ID UNIQUEIDENTIFIER NOT NULL DEFAULT NEWID() PRIMARY KEY,
    MANUFACTURER_ID UNIQUEIDENTIFIER NOT NULL,
    NAME NVARCHAR(200) NOT NULL,
    DEVICE_TYPE_ID UNIQUEIDENTIFIER NULL,
    DEVICE_MODEL_ID UNIQUEIDENTIFIER NULL,
    COVERAGE_MONTHS INT NOT NULL,
    REGION_CODE NVARCHAR(10) NULL,
    CONDITIONS_JSON NVARCHAR(MAX) NULL,
    TERMS_URI NVARCHAR(300) NULL,
    TERMS_HASH NVARCHAR(128) NULL,
    CREATED_AT DATETIME2(3) NOT NULL DEFAULT SYSUTCDATETIME(),
    UPDATED_AT DATETIME2(3) NOT NULL DEFAULT SYSUTCDATETIME(),
    CONSTRAINT FK_WD_MANUFACTURER FOREIGN KEY (MANUFACTURER_ID) REFERENCES elm.MANUFACTURER (MANUFACTURER_ID),
    CONSTRAINT FK_WD_DEVICE_TYPE FOREIGN KEY (DEVICE_TYPE_ID) REFERENCES elm.DEVICE_TYPE (DEVICE_TYPE_ID),
    CONSTRAINT FK_WD_DEVICE_MODEL FOREIGN KEY (DEVICE_MODEL_ID) REFERENCES elm.DEVICE_MODEL (DEVICE_MODEL_ID)
);
GO

CREATE TABLE elm.WARRANTY_DEF_COVERAGE (
    WARRANTY_DEF_ID UNIQUEIDENTIFIER NOT NULL,
    SERVICE_TYPE_ID UNIQUEIDENTIFIER NOT NULL,
    LIMIT_JSON NVARCHAR(MAX) NULL,
    PRIMARY KEY (WARRANTY_DEF_ID, SERVICE_TYPE_ID),
    CONSTRAINT FK_WDC_DEF FOREIGN KEY (WARRANTY_DEF_ID) REFERENCES elm.WARRANTY_DEFINITION (WARRANTY_DEF_ID),
    CONSTRAINT FK_WDC_SERVICE_TYPE FOREIGN KEY (SERVICE_TYPE_ID) REFERENCES elm.SERVICE_TYPE (SERVICE_TYPE_ID)
);
GO

CREATE TABLE elm.WARRANTY_CONTRACT (
    WARRANTY_CONTRACT_ID UNIQUEIDENTIFIER NOT NULL DEFAULT NEWID() PRIMARY KEY,
    DEVICE_ID UNIQUEIDENTIFIER NOT NULL,
    MANUFACTURER_ID UNIQUEIDENTIFIER NOT NULL,
    WARRANTY_DEF_ID UNIQUEIDENTIFIER NOT NULL,
    REGISTERED_ON DATE NOT NULL,
    EFFECTIVE_ON DATE NOT NULL,
    EXPIRES_ON DATE NOT NULL,
    STATUS NVARCHAR(20) NOT NULL DEFAULT 'ACTIVE',
    SERIAL_AT_REGISTRATION NVARCHAR(100) NULL,
    PROOF_URI NVARCHAR(300) NULL,
    PROOF_HASH NVARCHAR(128) NULL,
    CREATED_AT DATETIME2(3) NOT NULL DEFAULT SYSUTCDATETIME(),
    UPDATED_AT DATETIME2(3) NOT NULL DEFAULT SYSUTCDATETIME(),
    CONSTRAINT FK_WC_DEVICE FOREIGN KEY (DEVICE_ID) REFERENCES elm.DEVICE (DEVICE_ID),
    CONSTRAINT FK_WC_DEF FOREIGN KEY (WARRANTY_DEF_ID) REFERENCES elm.WARRANTY_DEFINITION (WARRANTY_DEF_ID),
    CONSTRAINT FK_WC_MANUFACTURER FOREIGN KEY (MANUFACTURER_ID) REFERENCES elm.MANUFACTURER (MANUFACTURER_ID),
    CONSTRAINT CK_WC_DATES CHECK (EXPIRES_ON >= EFFECTIVE_ON)
);
GO

CREATE UNIQUE INDEX IXU_WC_DEVICE_DEF_ACTIVE
    ON elm.WARRANTY_CONTRACT (DEVICE_ID, WARRANTY_DEF_ID, STATUS)
    WHERE STATUS = 'ACTIVE';
GO

CREATE TABLE elm.PART (
    PART_ID UNIQUEIDENTIFIER NOT NULL DEFAULT NEWID() PRIMARY KEY,
    SKU NVARCHAR(100) NOT NULL UNIQUE,
    NAME NVARCHAR(200) NOT NULL,
    UNIT_COST DECIMAL(12, 2) NULL,
    CREATED_AT DATETIME2(3) NOT NULL DEFAULT SYSUTCDATETIME(),
    UPDATED_AT DATETIME2(3) NOT NULL DEFAULT SYSUTCDATETIME()
);
GO

CREATE TABLE elm.SERVICE_EVENT (
    EVENT_ID UNIQUEIDENTIFIER NOT NULL DEFAULT NEWID() PRIMARY KEY,
    DEVICE_ID UNIQUEIDENTIFIER NOT NULL,
    PROVIDER_ID UNIQUEIDENTIFIER NOT NULL,
    SERVICE_TYPE_ID UNIQUEIDENTIFIER NOT NULL,
    OCCURRED_AT DATETIME2(3) NOT NULL,
    CREATED_BY UNIQUEIDENTIFIER NULL,
    ACK_BY UNIQUEIDENTIFIER NULL,
    EVENT_TYPE NVARCHAR(50) NOT NULL,
    FINDINGS NVARCHAR(MAX) NULL,
    RESOLUTION NVARCHAR(MAX) NULL,
    COST_AMOUNT DECIMAL(12, 2) NULL,
    SPACE_ID UNIQUEIDENTIFIER NULL,
    WARRANTY_CONTRACT_ID UNIQUEIDENTIFIER NULL,
    CREATED_AT DATETIME2(3) NOT NULL DEFAULT SYSUTCDATETIME(),
    UPDATED_AT DATETIME2(3) NOT NULL DEFAULT SYSUTCDATETIME(),
    CONSTRAINT FK_SE_DEVICE FOREIGN KEY (DEVICE_ID) REFERENCES elm.DEVICE (DEVICE_ID),
    CONSTRAINT FK_SE_PROVIDER FOREIGN KEY (PROVIDER_ID) REFERENCES elm.SERVICE_PROVIDER (PROVIDER_ID),
    CONSTRAINT FK_SE_SERVICE_TYPE FOREIGN KEY (SERVICE_TYPE_ID) REFERENCES elm.SERVICE_TYPE (SERVICE_TYPE_ID),
    CONSTRAINT FK_SE_SPACE FOREIGN KEY (SPACE_ID) REFERENCES elm.SPACE (SPACE_ID),
    CONSTRAINT FK_SE_WARRANTY_CONTRACT FOREIGN KEY (WARRANTY_CONTRACT_ID) REFERENCES elm.WARRANTY_CONTRACT (WARRANTY_CONTRACT_ID)
);
GO

CREATE TABLE elm.SERVICE_EVENT_PART (
    EVENT_ID UNIQUEIDENTIFIER NOT NULL,
    PART_ID UNIQUEIDENTIFIER NOT NULL,
    QTY INT NOT NULL CHECK (QTY > 0),
    LINE_COST DECIMAL(12, 2) NULL,
    PRIMARY KEY (EVENT_ID, PART_ID),
    CONSTRAINT FK_SEP_EVENT FOREIGN KEY (EVENT_ID) REFERENCES elm.SERVICE_EVENT (EVENT_ID),
    CONSTRAINT FK_SEP_PART FOREIGN KEY (PART_ID) REFERENCES elm.PART (PART_ID)
);
GO

CREATE OR ALTER TRIGGER elm.TRG_DEVICE_SPACE_BLOCK_FLOATING
ON elm.DEVICE_SPACE
INSTEAD OF INSERT
AS
BEGIN
    SET NOCOUNT ON;
    IF EXISTS (
        SELECT 1
        FROM inserted I
        JOIN elm.DEVICE D ON D.DEVICE_ID = I.DEVICE_ID
        JOIN elm.DEVICE_MODEL DM ON DM.DEVICE_MODEL_ID = D.DEVICE_MODEL_ID
        JOIN elm.DEVICE_TYPE DT ON DT.DEVICE_TYPE_ID = DM.DEVICE_TYPE_ID
        WHERE UPPER(DT.CODE) IN ('INSTRUMENT', 'HANDPIECE')
    )
    BEGIN
        RAISERROR('Device type INSTRUMENT/HANDPIECE cannot be assigned to a Space (they serve entire clinic).', 16, 1);
        RETURN;
    END
    INSERT INTO elm.DEVICE_SPACE (DEVICE_SPACE_ID, DEVICE_ID, SPACE_ID, START_AT, END_AT)
    SELECT DEVICE_SPACE_ID, DEVICE_ID, SPACE_ID, START_AT, END_AT
    FROM inserted;
END;
GO

CREATE OR ALTER VIEW elm.VW_WARRANTY_ELIGIBILITY
AS
SELECT
    WC.WARRANTY_CONTRACT_ID,
    WC.DEVICE_ID,
    WDC.SERVICE_TYPE_ID,
    WC.EFFECTIVE_ON,
    WC.EXPIRES_ON
FROM elm.WARRANTY_CONTRACT WC
JOIN elm.WARRANTY_DEFINITION WD ON WD.WARRANTY_DEF_ID = WC.WARRANTY_DEF_ID
JOIN elm.WARRANTY_DEF_COVERAGE WDC ON WDC.WARRANTY_DEF_ID = WD.WARRANTY_DEF_ID
WHERE WC.STATUS = 'ACTIVE';
GO

CREATE OR ALTER FUNCTION elm.FN_PROVIDER_CERT_VALID
(
    @PROVIDER_ID UNIQUEIDENTIFIER,
    @DEVICE_ID UNIQUEIDENTIFIER,
    @SERVICE_TYPE_ID UNIQUEIDENTIFIER,
    @ON_DATE DATE
)
RETURNS BIT
AS
BEGIN
    DECLARE @OK BIT = 0;
    ;WITH DEVICE_SCOPE AS (
        SELECT DM.DEVICE_MODEL_ID, DM.DEVICE_TYPE_ID, DM.MANUFACTURER_ID
        FROM elm.DEVICE D
        JOIN elm.DEVICE_MODEL DM ON DM.DEVICE_MODEL_ID = D.DEVICE_MODEL_ID
        WHERE D.DEVICE_ID = @DEVICE_ID
    )
    IF EXISTS (
        SELECT 1
        FROM elm.PROVIDER_CERTIFICATION PC
        CROSS JOIN DEVICE_SCOPE S
        WHERE PC.PROVIDER_ID = @PROVIDER_ID
          AND PC.MANUFACTURER_ID = S.MANUFACTURER_ID
          AND PC.DEVICE_TYPE_ID = S.DEVICE_TYPE_ID
          AND PC.SERVICE_TYPE_ID = @SERVICE_TYPE_ID
          AND (@ON_DATE BETWEEN PC.ISSUED_ON AND PC.EXPIRES_ON)
          AND (PC.DEVICE_MODEL_ID IS NULL OR PC.DEVICE_MODEL_ID = S.DEVICE_MODEL_ID)
    )
        SET @OK = 1;
    RETURN @OK;
END;
GO

CREATE OR ALTER TRIGGER elm.TRG_SERVICE_EVENT_VALIDATE
ON elm.SERVICE_EVENT
AFTER INSERT
AS
BEGIN
    SET NOCOUNT ON;

    IF EXISTS (
        SELECT 1
        FROM inserted I
        WHERE elm.FN_PROVIDER_CERT_VALID(I.PROVIDER_ID, I.DEVICE_ID, I.SERVICE_TYPE_ID, CAST(I.OCCURRED_AT AS DATE)) = 0
    )
    BEGIN
        RAISERROR('Provider lacks a valid certification for the device/service at the event date.', 16, 1);
        ROLLBACK TRANSACTION;
        RETURN;
    END

    IF EXISTS (
        SELECT 1
        FROM inserted I
        JOIN elm.WARRANTY_CONTRACT WC ON WC.WARRANTY_CONTRACT_ID = I.WARRANTY_CONTRACT_ID
        LEFT JOIN elm.VW_WARRANTY_ELIGIBILITY WE
            ON WE.WARRANTY_CONTRACT_ID = WC.WARRANTY_CONTRACT_ID
           AND WE.SERVICE_TYPE_ID = I.SERVICE_TYPE_ID
        WHERE I.WARRANTY_CONTRACT_ID IS NOT NULL
          AND (CAST(I.OCCURRED_AT AS DATE) NOT BETWEEN WC.EFFECTIVE_ON AND WC.EXPIRES_ON
               OR WE.WARRANTY_CONTRACT_ID IS NULL)
    )
    BEGIN
        RAISERROR('Warranty contract provided is not active or does not cover the service type on the event date.', 16, 1);
        ROLLBACK TRANSACTION;
        RETURN;
    END
END;
GO

CREATE INDEX IX_DEVICE_CLINIC ON elm.DEVICE (CLINIC_ID);
GO

CREATE INDEX IX_DEVICE_DEVICE_MODEL ON elm.DEVICE (DEVICE_MODEL_ID);
GO

CREATE INDEX IX_WC_DEVICE_STATUS_EXPIRES ON elm.WARRANTY_CONTRACT (DEVICE_ID, STATUS, EXPIRES_ON);
GO

CREATE INDEX IX_SE_DEVICE_DATE ON elm.SERVICE_EVENT (DEVICE_ID, OCCURRED_AT);
GO

CREATE INDEX IX_PC_PROVIDER_EXPIRES ON elm.PROVIDER_CERTIFICATION (PROVIDER_ID, EXPIRES_ON);
GO
