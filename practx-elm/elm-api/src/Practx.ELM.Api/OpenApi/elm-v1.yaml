openapi: 3.0.3
info:
  title: Practx ELM API
  version: 1.0.0
servers:
  - url: http://localhost:5080
paths:
  /clinics/{clinicId}/devices:
    get:
      summary: List devices for a clinic
      parameters:
        - name: clinicId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: typeId
          in: query
          schema:
            type: string
            format: uuid
            nullable: true
        - name: status
          in: query
          schema:
            type: string
            enum: [active, in_repair, retired]
            nullable: true
        - name: search
          in: query
          schema:
            type: string
            nullable: true
            description: serial substring
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeviceListItem'
  /devices/{deviceId}:
    get:
      summary: Get device detail
      parameters:
        - name: deviceId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceDetail'
  /devices/{deviceId}/warranty/active:
    get:
      summary: Get active warranty on a date
      parameters:
        - name: deviceId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: on
          in: query
          required: true
          schema:
            type: string
            format: date
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WarrantyActive'
  /warranties/contracts:
    post:
      summary: Register a warranty contract for a device
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WarrantyContractCreate'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WarrantyContract'
        '400':
          description: Validation error
  /service-events:
    post:
      summary: Create a service event with domain validations
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceEventCreate'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceEvent'
        '400':
          description: Validation error
  /lookups/service-types:
    get:
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Lookup'
  /lookups/device-types:
    get:
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Lookup'
  /lookups/providers:
    get:
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Lookup'
components:
  schemas:
    Lookup:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
      required: [id, name]
    DeviceListItem:
      type: object
      properties:
        deviceId:
          type: string
          format: uuid
        deviceTypeId:
          type: string
          format: uuid
        deviceTypeName:
          type: string
        deviceModelId:
          type: string
          format: uuid
        deviceModelName:
          type: string
        status:
          type: string
          enum: [active, in_repair, retired]
        installedAt:
          type: string
          format: date-time
          nullable: true
        serialNumber:
          type: string
          nullable: true
        warrantyBadge:
          type: string
          enum: [active, expired, none]
      required: [deviceId, deviceTypeId, deviceTypeName, deviceModelId, deviceModelName, status, warrantyBadge]
    DeviceDetail:
      allOf:
        - $ref: '#/components/schemas/DeviceListItem'
        - type: object
          properties:
            notes:
              type: string
              nullable: true
            spaces:
              type: array
              items:
                type: object
                properties:
                  spaceId:
                    type: string
                    format: uuid
                  name:
                    type: string
                  kind:
                    type: string
                required: [spaceId, name, kind]
            serviceEvents:
              type: array
              items:
                $ref: '#/components/schemas/ServiceEvent'
    WarrantyActive:
      type: object
      properties:
        warrantyContractId:
          type: string
          format: uuid
          nullable: true
        warrantyDefId:
          type: string
          format: uuid
          nullable: true
        name:
          type: string
          nullable: true
        effectiveOn:
          type: string
          format: date
          nullable: true
        expiresOn:
          type: string
          format: date
          nullable: true
        coveredServiceTypeIds:
          type: array
          items:
            type: string
            format: uuid
        status:
          type: string
          enum: [active, expired, none]
      required: [status, coveredServiceTypeIds]
    WarrantyContractCreate:
      type: object
      properties:
        deviceId:
          type: string
          format: uuid
        manufacturerId:
          type: string
          format: uuid
        warrantyDefId:
          type: string
          format: uuid
        registeredOn:
          type: string
          format: date
      required: [deviceId, manufacturerId, warrantyDefId, registeredOn]
    WarrantyContract:
      type: object
      properties:
        warrantyContractId:
          type: string
          format: uuid
        deviceId:
          type: string
          format: uuid
        manufacturerId:
          type: string
          format: uuid
        warrantyDefId:
          type: string
          format: uuid
        effectiveOn:
          type: string
          format: date
        expiresOn:
          type: string
          format: date
        status:
          type: string
      required: [warrantyContractId, deviceId, manufacturerId, warrantyDefId, effectiveOn, expiresOn, status]
    ServiceEventCreate:
      type: object
      properties:
        deviceId:
          type: string
          format: uuid
        providerId:
          type: string
          format: uuid
        serviceTypeId:
          type: string
          format: uuid
        occurredAt:
          type: string
          format: date-time
        spaceId:
          type: string
          format: uuid
          nullable: true
        warrantyContractId:
          type: string
          format: uuid
          nullable: true
        parts:
          type: array
          items:
            type: object
            properties:
              partId:
                type: string
                format: uuid
              qty:
                type: integer
                minimum: 1
              lineCost:
                type: number
            required: [partId, qty]
      required: [deviceId, providerId, serviceTypeId, occurredAt]
    ServiceEvent:
      type: object
      properties:
        eventId:
          type: string
          format: uuid
        deviceId:
          type: string
          format: uuid
        providerId:
          type: string
          format: uuid
        serviceTypeId:
          type: string
          format: uuid
        occurredAt:
          type: string
          format: date-time
        warrantyContractId:
          type: string
          format: uuid
          nullable: true
      required: [eventId, deviceId, providerId, serviceTypeId, occurredAt]
